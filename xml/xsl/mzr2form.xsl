<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet exclude-result-prefixes="xalan" version="1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:xalan="http://xml.apache.org/xalan" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><!--This converts moleculizer-input into a tree-like HTML display in which each element and attribute name is a link to moleculizer documentation via cgi, similar to moleculizer2doc.xsl.  In this version, each attribute that is so marked in the schema-doc file is displayed as a user input element.  This cgi variable should be named using a "real" xpath to the element, so that it can be used in an xslt transformation to find and edit the value in corresponding to the input field.--><!--These are parameters in this version, which is expected to execute on the server.--><xsl:param name="action-url"/><xsl:param name="path-doc-url"/><xsl:param name="caption"/><xsl:param name="schema-doc-file-path"/><xsl:param name="variation-source"/><xsl:param name="variation-target"/><xsl:param name="session"/><xsl:param name="proxy-target"/><xsl:template match="*"><xsl:param name="docpth"/><xsl:param name="xpath"/><xsl:variable name="cur-dpth" select="concat($docpth, name())"/><xsl:variable name="myname" select="name()"/><xsl:variable name="cur-xpth" select="concat($xpath, name(), '[', count(preceding-sibling::*[name() = $myname]) + 1, ']')"/><xsl:element name="li"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($path-doc-url, $cur-dpth)"/></xsl:attribute><xsl:element name="strong"><xsl:value-of select="name()"/></xsl:element></xsl:element><xsl:if test="@*"><xsl:element name="table"><xsl:attribute name="border"><xsl:text>1</xsl:text></xsl:attribute><xsl:attribute name="cellpadding"><xsl:text>3</xsl:text></xsl:attribute><xsl:for-each select="@*"><xsl:variable name="attr-doc"><xsl:apply-templates mode="get-doc" select="document($schema-doc-file-path)"><xsl:with-param name="target-docpth" select="concat($cur-dpth, '/@', name())"/></xsl:apply-templates></xsl:variable><xsl:variable name="attr-doc-nodelist" select="xalan:nodeset($attr-doc)"/><xsl:element name="tr"><xsl:attribute name="align"><xsl:text>center</xsl:text></xsl:attribute><xsl:element name="td"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($path-doc-url, $cur-dpth, '/@', name())"/></xsl:attribute><xsl:value-of select="name()"/></xsl:element></xsl:element><xsl:choose><xsl:when test="$attr-doc-nodelist/rng:doc/@user-variable"><xsl:element name="td"><xsl:attribute name="bgcolor"><xsl:text>teal</xsl:text></xsl:attribute><xsl:element name="input"><xsl:attribute name="type">text</xsl:attribute><xsl:attribute name="name"><xsl:value-of select="concat($cur-xpth, '/@', name())"/></xsl:attribute><xsl:attribute name="value"><xsl:value-of select="."/></xsl:attribute></xsl:element></xsl:element></xsl:when><xsl:otherwise><xsl:element name="td"><xsl:value-of select="."/></xsl:element></xsl:otherwise></xsl:choose></xsl:element></xsl:for-each></xsl:element></xsl:if><xsl:if test="*"><xsl:element name="ul"><xsl:apply-templates><xsl:with-param name="docpth" select="concat($cur-dpth, '/')"/><xsl:with-param name="xpath" select="concat($cur-xpth, '/')"/></xsl:apply-templates></xsl:element></xsl:if></xsl:element></xsl:template><xsl:template match="/"><xsl:element name="head"><xsl:element name="title"><xsl:value-of select="$caption"/></xsl:element></xsl:element><xsl:element name="body"><xsl:element name="H1"><xsl:value-of select="$caption"/></xsl:element><xsl:element name="form"><xsl:attribute name="method">POST</xsl:attribute><xsl:attribute name="enctype">multipart/form-data</xsl:attribute><xsl:attribute name="action"><xsl:value-of select="$action-url"/></xsl:attribute><xsl:element name="input"><xsl:attribute name="type">submit</xsl:attribute><xsl:attribute name="value">Submit variation</xsl:attribute></xsl:element><xsl:element name="input"><xsl:attribute name="type"><xsl:text>hidden</xsl:text></xsl:attribute><xsl:attribute name="name"><xsl:text>session</xsl:text></xsl:attribute><xsl:attribute name="value"><xsl:value-of select="$session"/></xsl:attribute></xsl:element><xsl:element name="input"><xsl:attribute name="type"><xsl:text>hidden</xsl:text></xsl:attribute><xsl:attribute name="name"><xsl:text>task</xsl:text></xsl:attribute><xsl:attribute name="value">vary-file</xsl:attribute></xsl:element><xsl:element name="input"><xsl:attribute name="type"><xsl:text>hidden</xsl:text></xsl:attribute><xsl:attribute name="name"><xsl:text>variation-source</xsl:text></xsl:attribute><xsl:attribute name="value"><xsl:value-of select="$variation-source"/></xsl:attribute></xsl:element><xsl:element name="input"><xsl:attribute name="type"><xsl:text>hidden</xsl:text></xsl:attribute><xsl:attribute name="name"><xsl:text>variation-target</xsl:text></xsl:attribute><xsl:attribute name="value"><xsl:value-of select="$variation-target"/></xsl:attribute></xsl:element><xsl:element name="input"><xsl:attribute name="type"><xsl:text>hidden</xsl:text></xsl:attribute><xsl:attribute name="name"><xsl:text>proxy-target</xsl:text></xsl:attribute><xsl:attribute name="value"><xsl:value-of select="$proxy-target"/></xsl:attribute></xsl:element><xsl:element name="ul"><xsl:apply-templates><xsl:with-param name="docpth" select="'/'"/><xsl:with-param name="xpath" select="'/'"/></xsl:apply-templates></xsl:element></xsl:element></xsl:element></xsl:template><xsl:template match="/" mode="get-doc"><xsl:param name="target-docpth"/><xsl:apply-templates mode="get-doc" select="rng:grammar-doc/rng:start"><xsl:with-param name="docpth" select="'/'"/><xsl:with-param name="target-docpth" select="$target-docpth"/></xsl:apply-templates></xsl:template><xsl:template match="*" mode="get-doc"><xsl:param name="docpth"/><xsl:param name="target-docpth"/><xsl:apply-templates mode="get-doc" select="*"><xsl:with-param name="docpth" select="$docpth"/><xsl:with-param name="target-docpth" select="$target-docpth"/></xsl:apply-templates></xsl:template><xsl:template match="rng:element" mode="get-doc"><xsl:param name="docpth"/><xsl:param name="target-docpth"/><xsl:variable name="cur-dpth" select="concat($docpth, @name)"/><xsl:variable name="next-dpth" select="concat($cur-dpth, '/')"/><xsl:choose><xsl:when test="$target-docpth = $cur-dpth"><xsl:copy-of select="rng:doc"/></xsl:when><xsl:when test="starts-with($target-docpth, $next-dpth)"><xsl:apply-templates mode="get-doc" select="*"><xsl:with-param name="docpth" select="$next-dpth"/><xsl:with-param name="target-docpth" select="$target-docpth"/></xsl:apply-templates></xsl:when></xsl:choose></xsl:template><xsl:template match="rng:attribute" mode="get-doc"><xsl:param name="docpth"/><xsl:param name="target-docpth"/><xsl:variable name="cur-dpth" select="concat($docpth, '@', @name)"/><xsl:if test="$target-docpth = $cur-dpth"><xsl:copy-of select="rng:doc"/></xsl:if></xsl:template><xsl:template match="rng:ref" mode="get-doc"><xsl:param name="docpth"/><xsl:param name="target-docpth"/><xsl:variable name="refname" select="@name"/><xsl:apply-templates mode="get-doc" select="document($schema-doc-file-path)/rng:grammar-doc/rng:define[@name = $refname]"><xsl:with-param name="docpth" select="$docpth"/><xsl:with-param name="target-docpth" select="$target-docpth"/></xsl:apply-templates></xsl:template></xsl:stylesheet>