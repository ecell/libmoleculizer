<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:template match="/dtd"><html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"><head><title><xsl:value-of disable-output-escaping="no" select="@dTDName"/><xsl:text disable-output-escaping="no"> </xsl:text><xsl:value-of disable-output-escaping="no" select="@dTDVersion"/> - DTD</title><link href="xmloperator.css" rel="stylesheet" type="text/css"/></head><body><h1><xsl:value-of disable-output-escaping="no" select="@dTDName"/><xsl:text disable-output-escaping="no"> </xsl:text><xsl:value-of disable-output-escaping="no" select="@dTDVersion"/> - DTD</h1><p><xsl:value-of disable-output-escaping="no" select="@dTDDescription"/></p><table frame="border"><tbody><xsl:if test="@dTDPublicId"><tr align="left"><th colspan="1" rowspan="1">PUBLIC ID</th><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@dTDPublicId"/></xsl:call-template></td></tr></xsl:if><xsl:if test="@dTDSystemId"><tr align="left"><th colspan="1" rowspan="1">SYSTEM ID</th><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@dTDSystemId"/></xsl:call-template></td></tr></xsl:if><xsl:if test="@nsURIReference"><tr align="left"><th colspan="1" rowspan="1">Namespace</th><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@nsURIReference"/></xsl:call-template></td></tr></xsl:if><tr align="left"><th colspan="1" rowspan="1">Root element</th><td colspan="1" rowspan="1"><xsl:call-template name="QNameRef"><xsl:with-param name="element" select="id(@rootElementDecl)"/></xsl:call-template></td></tr></tbody></table><ul><xsl:if test="notationDecl"><li><a href="#h_notations" shape="rect">Notations</a></li></xsl:if><xsl:if test="internalEntityDecl"><li><a href="#h_internal_entities" shape="rect">Internal entities</a></li></xsl:if><xsl:if test="externalEntityDecl"><li><a href="#h_external_entities" shape="rect">External entities</a></li></xsl:if><xsl:if test="namespace"><li><a href="#h_namespaces" shape="rect">Namespaces</a></li></xsl:if><xsl:if test="attDefsPattern"><li><a href="#h_attributes_patterns" shape="rect">Attributes patterns</a></li></xsl:if><xsl:if test="childrenPattern"><li><a href="#h_children_patterns" shape="rect">Children patterns</a></li></xsl:if><li><a href="#h_elements" shape="rect">Elements</a></li></ul><xsl:if test="notationDecl"><h2><a id="h_notations" name="h_notations" shape="rect">Notations</a></h2><table frame="border"><thead><tr align="center"><th colspan="1" rowspan="1">Name</th><th colspan="1" rowspan="1">Public Id</th><th colspan="1" rowspan="1">System Id</th></tr></thead><tbody><xsl:for-each select="notationDecl"><tr align="left"><td colspan="1" rowspan="1"><xsl:value-of disable-output-escaping="no" select="@name"/></td><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@publicId"/></xsl:call-template></td><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@systemId"/></xsl:call-template></td></tr></xsl:for-each></tbody></table></xsl:if><xsl:if test="internalEntityDecl"><h2><a id="h_internal_entities" name="h_internal_entities" shape="rect">Internal Entities</a></h2><table frame="border"><thead><tr align="center"><th colspan="1" rowspan="1">Name</th><th colspan="1" rowspan="1">Value</th></tr></thead><tbody><xsl:for-each select="internalEntityDecl"><tr align="left"><td colspan="1" rowspan="1"><xsl:value-of disable-output-escaping="no" select="@name"/></td><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@value"/></xsl:call-template></td></tr></xsl:for-each></tbody></table></xsl:if><xsl:if test="externalEntityDecl"><h2><a id="h_external_entities" name="h_external_entities" shape="rect">External Entities</a></h2><table frame="border"><thead><tr align="center"><th colspan="1" rowspan="1">Name</th><th colspan="1" rowspan="1">Public Id</th><th colspan="1" rowspan="1">System Id</th><th colspan="1" rowspan="1">Notation name</th></tr></thead><tbody><xsl:for-each select="externalEntityDecl"><tr align="left"><td colspan="1" rowspan="1"><xsl:value-of disable-output-escaping="no" select="@name"/></td><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@publicId"/></xsl:call-template></td><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@systemId"/></xsl:call-template></td><td colspan="1" rowspan="1"><xsl:value-of disable-output-escaping="no" select="@notationName"/></td></tr></xsl:for-each></tbody></table></xsl:if><xsl:if test="namespace"><h2><a id="h_namespaces" name="h_namespaces" shape="rect">Namespaces</a></h2><table frame="border"><thead><tr align="center"><th colspan="1" rowspan="1">Prefix</th><th colspan="1" rowspan="1">URI reference</th></tr></thead><tbody><xsl:for-each select="namespace"><tr align="left"><td colspan="1" rowspan="1"><xsl:variable name="namespaceId" select="@id"/><xsl:variable name="prefix" select="/dtd/prefix[@namespace=$namespaceId]"/><xsl:if test="$prefix"><xsl:value-of disable-output-escaping="no" select="$prefix/@prefix"/></xsl:if></td><td colspan="1" rowspan="1"><xsl:call-template name="value"><xsl:with-param name="value" select="@uRIReference"/></xsl:call-template></td></tr></xsl:for-each></tbody></table></xsl:if><xsl:if test="attDefsPattern"><h2><a id="h_attributes_patterns" name="h_attributes_patterns" shape="rect">Attributes patterns</a></h2><xsl:call-template name="indexId"><xsl:with-param name="elements" select="attDefsPattern"/></xsl:call-template><xsl:for-each select="attDefsPattern"><h3>Attributes pattern<xsl:call-template name="id"/></h3><xsl:call-template name="attDefs"/></xsl:for-each></xsl:if><xsl:if test="childrenPattern"><h2><a id="h_children_patterns" name="h_children_patterns" shape="rect">Children patterns</a></h2><xsl:call-template name="indexId"><xsl:with-param name="elements" select="childrenPattern"/></xsl:call-template><xsl:for-each select="childrenPattern"><h3>Children pattern<xsl:call-template name="id"/></h3><p><xsl:call-template name="children"/></p></xsl:for-each></xsl:if><h2><a id="h_elements" name="h_elements" shape="rect">Elements</a></h2><xsl:call-template name="indexQName"><xsl:with-param name="elements" select="elementDecl"/></xsl:call-template><xsl:for-each select="elementDecl"><h3>Element<xsl:call-template name="QNameId"/></h3><xsl:if test="namespaceRef | namespacePrefix | attDef | attDefsPatternRef"><xsl:call-template name="attDefs"/></xsl:if><xsl:for-each select="children"><p><xsl:call-template name="children"/></p></xsl:for-each><xsl:for-each select="childrenPatternRef"><p><xsl:call-template name="idRef"><xsl:with-param name="element" select="id(@childrenPattern)"/></xsl:call-template></p></xsl:for-each><xsl:for-each select="mixed"><p><xsl:call-template name="mixed"/></p></xsl:for-each><xsl:call-template name="elementDeclNotes"><xsl:with-param name="type" select="&quot;constraint&quot;"/><xsl:with-param name="title" select="&quot;Constraints&quot;"/></xsl:call-template><xsl:call-template name="elementDeclNotes"><xsl:with-param name="type" select="&quot;equivalence&quot;"/><xsl:with-param name="title" select="&quot;Equivalences&quot;"/></xsl:call-template><xsl:call-template name="elementDeclNotes"><xsl:with-param name="type" select="&quot;use&quot;"/><xsl:with-param name="title" select="&quot;Usages&quot;"/></xsl:call-template><xsl:call-template name="elementDeclNotes"><xsl:with-param name="type" select="&quot;comment&quot;"/><xsl:with-param name="title" select="&quot;Comments&quot;"/></xsl:call-template></xsl:for-each><hr/><xsl:if test="@lastUpdate"><p>Last update : <xsl:value-of disable-output-escaping="no" select="@lastUpdate"/></p></xsl:if></body></html></xsl:template><xsl:template name="QName"><xsl:param name="element"/><xsl:if test="$element/@prefix"><xsl:value-of disable-output-escaping="no" select="id($element/@prefix)/@prefix"/>:</xsl:if><xsl:value-of disable-output-escaping="no" select="$element/@localPartName"/></xsl:template><xsl:template name="QNameId"><a id="{@id}" name="{@id}" shape="rect"><xsl:text disable-output-escaping="no"> &quot;</xsl:text><xsl:call-template name="QName"><xsl:with-param name="element" select="."/></xsl:call-template><xsl:text disable-output-escaping="no">&quot;</xsl:text></a></xsl:template><xsl:template name="QNameRef"><xsl:param name="element"/><a href="#{$element/@id}" shape="rect"><xsl:call-template name="QName"><xsl:with-param name="element" select="$element"/></xsl:call-template></a></xsl:template><xsl:template name="id"><a id="{@id}" name="{@id}" shape="rect"><xsl:text disable-output-escaping="no"> &quot;</xsl:text><xsl:value-of disable-output-escaping="no" select="@id"/><xsl:text disable-output-escaping="no">&quot;</xsl:text></a></xsl:template><xsl:template name="idRef"><xsl:param name="element"/><a href="#{$element/@id}" shape="rect"><xsl:value-of disable-output-escaping="no" select="$element/@id"/></a></xsl:template><xsl:template name="attDefs"><table frame="border"><thead><tr align="center"><th colspan="1" rowspan="1">Attribute name</th><th colspan="1" rowspan="1">Type</th><th colspan="1" rowspan="1">Value (default)</th><th colspan="1" rowspan="1">Identity constraint</th></tr></thead><tbody><xsl:for-each select="namespaceRef | namespacePrefix | attDef | attDefsPatternRef"><tr align="left"><td colspan="1" rowspan="1"><xsl:choose><xsl:when test="name()=&quot;namespaceRef&quot;">xmlns</xsl:when><xsl:when test="name()=&quot;namespacePrefix&quot;">xmlns:<xsl:value-of disable-output-escaping="no" select="id(@prefix)/@prefix"/></xsl:when><xsl:when test="name()=&quot;attDef&quot;"><xsl:call-template name="QName"><xsl:with-param name="element" select="."/></xsl:call-template></xsl:when><xsl:when test="name()=&quot;attDefsPatternRef&quot;"><xsl:call-template name="idRef"><xsl:with-param name="element" select="id(@attDefsPattern)"/></xsl:call-template></xsl:when></xsl:choose></td><td colspan="1" rowspan="1"><xsl:if test="name()=&quot;attDef&quot;"><xsl:choose><xsl:when test="@type=&quot;enumeration&quot;"><xsl:text disable-output-escaping="no">( </xsl:text><xsl:value-of disable-output-escaping="no" select="@enumeration"/><xsl:text disable-output-escaping="no"> )</xsl:text></xsl:when><xsl:otherwise><xsl:value-of disable-output-escaping="no" select="@type"/></xsl:otherwise></xsl:choose></xsl:if></td><td colspan="1" rowspan="1"><xsl:choose><xsl:when test="name()=&quot;namespaceRef&quot;"><xsl:call-template name="value"><xsl:with-param name="value" select="id(@namespace)/@uRIReference"/></xsl:call-template></xsl:when><xsl:when test="name()=&quot;namespacePrefix&quot;"><xsl:call-template name="value"><xsl:with-param name="value" select="id(id(@prefix)/@namespace)/@uRIReference"/></xsl:call-template></xsl:when><xsl:when test="name()=&quot;attDef&quot;"><xsl:choose><xsl:when test="@defaultValue"><xsl:if test="@defaultType=&quot;fixed&quot;"><xsl:text disable-output-escaping="no">fixed </xsl:text></xsl:if><xsl:call-template name="value"><xsl:with-param name="value" select="@defaultValue"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of disable-output-escaping="no" select="@defaultType"/></xsl:otherwise></xsl:choose></xsl:when></xsl:choose></td><td colspan="1" rowspan="1"><xsl:if test="name()=&quot;attDef&quot;"><xsl:value-of disable-output-escaping="no" select="@identityConstraint"/></xsl:if></td></tr></xsl:for-each></tbody></table></xsl:template><xsl:template name="children"><xsl:variable name="binaryOperator" select="@binaryOperator"/><xsl:text disable-output-escaping="no">( </xsl:text><xsl:for-each select="elementDeclRef | children | childrenPatternRef"><xsl:if test="position()>1"><xsl:choose><xsl:when test="$binaryOperator=&quot;choice&quot;"><xsl:text disable-output-escaping="no"> | </xsl:text></xsl:when><xsl:when test="$binaryOperator=&quot;seq&quot;"><xsl:text disable-output-escaping="no"> , </xsl:text></xsl:when></xsl:choose></xsl:if><xsl:choose><xsl:when test="name()=&quot;elementDeclRef&quot;"><xsl:call-template name="QNameRef"><xsl:with-param name="element" select="id(@elementDecl)"/></xsl:call-template><xsl:call-template name="unaryOperator"><xsl:with-param name="unaryOperator" select="@unaryOperator"/></xsl:call-template></xsl:when><xsl:when test="name()=&quot;children&quot;"><xsl:call-template name="children"/></xsl:when><xsl:when test="name()=&quot;childrenPatternRef&quot;"><xsl:call-template name="idRef"><xsl:with-param name="element" select="id(@childrenPattern)"/></xsl:call-template></xsl:when></xsl:choose></xsl:for-each><xsl:text disable-output-escaping="no"> )</xsl:text><xsl:call-template name="unaryOperator"><xsl:with-param name="unaryOperator" select="@unaryOperator"/></xsl:call-template></xsl:template><xsl:template name="mixed"><xsl:text disable-output-escaping="no">( #PCDATA</xsl:text><xsl:for-each select="elementDeclRef"><xsl:text disable-output-escaping="no"> | </xsl:text><xsl:call-template name="QNameRef"><xsl:with-param name="element" select="id(@elementDecl)"/></xsl:call-template></xsl:for-each><xsl:text disable-output-escaping="no"> )</xsl:text><xsl:if test="elementDeclRef"><xsl:text disable-output-escaping="no">*</xsl:text></xsl:if></xsl:template><xsl:template name="unaryOperator"><xsl:param name="unaryOperator"/><xsl:choose><xsl:when test="$unaryOperator=&quot;zeroOrOne&quot;">?</xsl:when><xsl:when test="$unaryOperator=&quot;zeroOrMore&quot;">*</xsl:when><xsl:when test="$unaryOperator=&quot;oneOrMore&quot;">+</xsl:when></xsl:choose></xsl:template><xsl:template name="elementDeclNotes"><xsl:param name="type"/><xsl:param name="title"/><xsl:if test="elementDeclNote[type=$type]"><h4><xsl:value-of disable-output-escaping="no" select="$title"/></h4><ul><xsl:for-each select="elementDeclNote[type=$type]"><li><xsl:value-of disable-output-escaping="no" select="text()"/></li></xsl:for-each></ul></xsl:if></xsl:template><xsl:template name="indexQName"><xsl:param name="elements"/><xsl:param name="minCount" select="2"/><xsl:if test="count($elements) >= $minCount"><ul><xsl:for-each select="$elements"><li><xsl:call-template name="QNameRef"><xsl:with-param name="element" select="."/></xsl:call-template></li></xsl:for-each></ul></xsl:if></xsl:template><xsl:template name="indexId"><xsl:param name="elements"/><xsl:param name="minCount" select="2"/><xsl:if test="count($elements) >= $minCount"><ul><xsl:for-each select="$elements"><li><xsl:call-template name="idRef"><xsl:with-param name="element" select="."/></xsl:call-template></li></xsl:for-each></ul></xsl:if></xsl:template><xsl:template name="value"><xsl:param name="value"/><xsl:if test="$value">&quot;<xsl:value-of disable-output-escaping="no" select="$value"/>&quot;</xsl:if></xsl:template></xsl:stylesheet>