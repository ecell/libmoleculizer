<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet exclude-result-prefixes="xalan" version="1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:xalan="http://xml.apache.org/xalan" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:output method="html"/><xsl:param name="input-search-path"/><xsl:param name="path-doc-url"/><xsl:param name="flat-doc-url"/><xsl:param name="toc-doc-url"/><xsl:param name="ndx-doc-url"/><xsl:template match="rng:element"><xsl:param name="xpth"/><xsl:variable name="curpth" select="concat($xpth, @name)"/><xsl:choose><xsl:when test="$curpth = $input-search-path"><xsl:element name="html"><xsl:element name="head"><xsl:element name="title"><xsl:value-of select="@name"/></xsl:element></xsl:element><xsl:element name="body"><xsl:element name="H1"><xsl:value-of select="@name"/></xsl:element><xsl:element name="p"><xsl:text>(</xsl:text><xsl:call-template name="xpth-anchors"><xsl:with-param name="xpth" select="$curpth"/><xsl:with-param name="rest-pth" select="substring-after($curpth, '/')"/></xsl:call-template><xsl:text>)</xsl:text></xsl:element><xsl:element name="hr"/><xsl:element name="p"><xsl:choose><xsl:when test="rng:doc"><xsl:value-of select="rng:doc/text()"/></xsl:when><xsl:otherwise><xsl:text>Sorry, no documentation recorded for this element yet.</xsl:text></xsl:otherwise></xsl:choose></xsl:element><xsl:if test="rng:doc/@more-doc-href"><xsl:element name="p"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($flat-doc-url, '/', rng:doc/@more-doc-href)"/></xsl:attribute><xsl:text>More</xsl:text></xsl:element><xsl:text>...</xsl:text></xsl:element></xsl:if><xsl:element name="hr"/><xsl:element name="table"><xsl:attribute name="border"/><xsl:element name="tr"><xsl:element name="th">Attributes</xsl:element><xsl:element name="th">Children</xsl:element></xsl:element><xsl:element name="tr"><xsl:element name="td"><xsl:element name="ul"><xsl:for-each select="rng:attribute"><xsl:element name="li"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($path-doc-url, $curpth, '/@', @name)"/></xsl:attribute><xsl:value-of select="@name"/></xsl:element></xsl:element></xsl:for-each><xsl:for-each select="rng:optional/rng:attribute"><xsl:element name="li"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($path-doc-url, $curpth, '/@', @name)"/></xsl:attribute><xsl:value-of select="@name"/></xsl:element></xsl:element></xsl:for-each></xsl:element></xsl:element><xsl:element name="td"><xsl:element name="ul"><xsl:apply-templates mode="immediate-children" select="*"><xsl:with-param name="xpth" select="concat($curpth, '/')"/></xsl:apply-templates></xsl:element></xsl:element></xsl:element></xsl:element><xsl:element name="p"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="$toc-doc-url"/></xsl:attribute><xsl:text>Table of contents</xsl:text></xsl:element></xsl:element><xsl:element name="p"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="$ndx-doc-url"/></xsl:attribute><xsl:text>Index</xsl:text></xsl:element></xsl:element></xsl:element></xsl:element></xsl:when><xsl:when test="starts-with($input-search-path, concat($curpth, '/'))"><xsl:apply-templates><xsl:with-param name="xpth" select="concat($curpth, '/')"/></xsl:apply-templates></xsl:when></xsl:choose></xsl:template><xsl:template match="rng:attribute"><xsl:param name="xpth"/><xsl:variable name="curpth" select="concat($xpth, '@', @name)"/><xsl:choose><xsl:when test="$input-search-path = $curpth"><xsl:element name="html"><xsl:element name="head"><xsl:element name="title"><xsl:value-of select="@name"/></xsl:element></xsl:element><xsl:element name="body"><xsl:element name="H1"><xsl:value-of select="@name"/></xsl:element><xsl:element name="p"><xsl:text>(</xsl:text><xsl:call-template name="xpth-anchors"><xsl:with-param name="xpth" select="$curpth"/><xsl:with-param name="rest-pth" select="substring-after($curpth, '/')"/></xsl:call-template><xsl:text>)</xsl:text></xsl:element><xsl:element name="hr"/><xsl:element name="p"><xsl:choose><xsl:when test="rng:doc"><xsl:value-of select="rng:doc/text()"/></xsl:when><xsl:otherwise><xsl:text>Sorry, no documentation recorded for this attribute yet.</xsl:text></xsl:otherwise></xsl:choose></xsl:element><xsl:if test="rng:doc/@more-doc-href"><xsl:element name="p"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($flat-doc-url, '/', rng:doc/@more-doc-href)"/></xsl:attribute><xsl:text>More</xsl:text></xsl:element><xsl:text>...</xsl:text></xsl:element></xsl:if><xsl:element name="hr"/><xsl:element name="p"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="$toc-doc-url"/></xsl:attribute><xsl:text>Table of contents</xsl:text></xsl:element></xsl:element><xsl:element name="p"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="$ndx-doc-url"/></xsl:attribute><xsl:text>Index</xsl:text></xsl:element></xsl:element></xsl:element></xsl:element></xsl:when></xsl:choose></xsl:template><xsl:template match="rng:element" mode="immediate-children"><xsl:param name="xpth"/><xsl:variable name="curpth" select="concat($xpth, @name)"/><xsl:element name="li"><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($path-doc-url, $curpth)"/></xsl:attribute><xsl:value-of select="@name"/></xsl:element></xsl:element></xsl:template><xsl:template match="rng:ref"><xsl:param name="xpth"/><xsl:variable name="ref-name" select="@name"/><xsl:apply-templates select="/rng:grammar-doc/rng:define[@name = $ref-name]"><xsl:with-param name="xpth" select="$xpth"/></xsl:apply-templates></xsl:template><xsl:template match="rng:ref" mode="immediate-children"><xsl:param name="xpth"/><xsl:variable name="ref-name" select="@name"/><xsl:apply-templates mode="immediate-children" select="/rng:grammar-doc/rng:define[@name = $ref-name]"><xsl:with-param name="xpth" select="$xpth"/></xsl:apply-templates></xsl:template><xsl:template match="/"><xsl:variable name="doc-pages-tree-fragment"><xsl:apply-templates select="rng:grammar-doc/rng:start"><xsl:with-param name="xpth" select="'/'"/></xsl:apply-templates></xsl:variable><xsl:variable name="doc-pages" select="xalan:nodeset($doc-pages-tree-fragment)"/><xsl:copy-of select="$doc-pages/*[1]"/></xsl:template><xsl:template match="*"><xsl:param name="xpth"/><xsl:apply-templates select="*"><xsl:with-param name="xpth" select="$xpth"/></xsl:apply-templates></xsl:template><xsl:template match="*" mode="immediate-children"><xsl:param name="xpth"/><xsl:apply-templates mode="immediate-children" select="*"><xsl:with-param name="xpth" select="$xpth"/></xsl:apply-templates></xsl:template><xsl:template name="xpth-anchors"><xsl:param name="xpth"/><xsl:param name="rest-pth"/><!--I add '!' to both strings, assuming that this will never be in an element or attribute name, so that substring-before will find the substring before the LAST (and only) copy of rest-pth in xpth.  This fixes a bug that appeared when the last element name in the path matched a substring of the next-to-last element, such as in the path stub .../dump-streams/dump-stream.--><xsl:variable name="cur-pth" select="substring-before(concat($xpth, '!'), concat('/', $rest-pth, '!'))"/><xsl:variable name="next-rest-pth" select="substring-after($rest-pth, '/')"/><xsl:if test="$cur-pth"><xsl:text>/</xsl:text><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($path-doc-url, $cur-pth)"/></xsl:attribute><xsl:call-template name="path-anchor-text"><xsl:with-param name="pth" select="$cur-pth"/></xsl:call-template></xsl:element></xsl:if><xsl:choose><xsl:when test="$next-rest-pth"><xsl:call-template name="xpth-anchors"><xsl:with-param name="xpth" select="$xpth"/><xsl:with-param name="rest-pth" select="$next-rest-pth"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:text>/</xsl:text><xsl:element name="a"><xsl:attribute name="href"><xsl:value-of select="concat($path-doc-url, $xpth)"/></xsl:attribute><xsl:call-template name="path-anchor-text"><xsl:with-param name="pth" select="$xpth"/></xsl:call-template></xsl:element></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="path-anchor-text"><xsl:param name="pth"/><xsl:choose><xsl:when test="contains($pth, '/')"><xsl:call-template name="path-anchor-text"><xsl:with-param name="pth" select="substring-after($pth, '/')"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="$pth"/></xsl:otherwise></xsl:choose></xsl:template></xsl:stylesheet>