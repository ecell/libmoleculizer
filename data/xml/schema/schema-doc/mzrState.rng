<?xml version='1.0' encoding='UTF-8'?>
<grammar-doc xmlns='http://relaxng.org/ns/structure/1.0' xmlns:rng='http://relaxng.org/ns/structure/1.0'>
  <include href='mol.rng'/>
  <include href='plex.rng'/>
  <include href='dimer.rng'/>
  <include href='stoch.rng'/>
  <include href='gpa.rng'/>
  <include href='nucEx.rng'/>
  <include href='modKinase.rng'/>
  <include href='scaffold.rng'/>
  <include href='ftr.rng'/>
  <define name='unit-state-content'>
    <!--The units should come in standard dependency order here.-->
    <ref name='mol-state-content'/>
  </define>
  <start>
    <element name='moleculizer-state'>
      <doc>This is a preliminary format for dumping part of simulation state from Moleculizer.  At this point, its main reason to exist is to transfer reaction networks generated by Moleculizer to other tools.  Much of it is similar to moleculizer-input, the main difference being the omission of reaction generators and the use of tags (hex addresses) as identifiers for generated species.</doc>
      <element name='model'>
        <doc>At this time, the only model constructs that are dumped are those necessary for the interpretation of the dumped species.  At this time, only modifications and mols are needed to interpret dumped plex species.</doc>
        <element name='units-states'>
          <doc>This section gives state information peculiar to individual modules.  Depending on which modules are present, different state specifications might appear in this section.  (Several parts of both moleculizer-input and moleculizer-state specifications have this property.  For some reason, I made the dependence on modules explicit in the name of this section.)</doc>
          <ref name='unit-state-content'/>
        </element>
        <element name='explicit-species-tags'>
          <doc>This section gives the name-to-tag correspondence for the species that were given names in the input document (i.e. the explicit species.)</doc>
          <zeroOrMore>
            <element name='explicit-species-tag'>
              <doc>This element just pairs an explicit species, named in moleculizer input, with its tag.  This allows you to find the references in the moleculizer-state file to a species that you named in the moleculizer-input file.</doc>
              <attribute name='name'>
                <doc>This is the name that you gave to an explicity species in the moleculizer-input file.</doc>
              </attribute>
              <attribute name='tag'>
                <doc>This is the tag (hex address) of an explicit species that you named in the moleculizer-input file.  This hex tag is the way that this explicit species is referred to in the moleculizer-state file.  Hex tags are used in the state file because very few species have names (those in the explicit-species section of the moleculizer-input.)</doc>
              </attribute>
            </element>
          </zeroOrMore>
        </element>
        <element name='tagged-species'>
          <doc>Here, all the species that appeared during the simulation are listed by their hex tags.  The format is the same as in the explicit-species section of input, except that the tags of species are used instead of names, since most species don't have names.</doc>
          <zeroOrMore>
            <ref name='tagged-species-content'/>
          </zeroOrMore>
        </element>
        <element name='tag-reactions'>
          <doc>This section lists all the reactions that were generated during the simulation.  It is the same as the explicit-reactions section in input, except that species tags are used instead of names.</doc>
          <zeroOrMore>
            <element name='tag-reaction'>
              <doc>This is for defining an explicit reaction in stoichiometric, or "high-school-chemistry" format, by giving the names of (explicit) substrate species, along with their multiplicities, and similarly giving the names of (explicit) product species, along with their multiplicities.  Finally, you give the reaction rate.  Note that there is no enforcement of conservation of mass or any other such sanity checks.  Every reaction should have at least one substrate</doc>
              <zeroOrMore>
                <element name='tagged-substrate'>
                  <attribute name='tag'>
                    <doc>This is the hex address of the substrate species as it appeared in the Moleculizer simulation.</doc>
                  </attribute>
                  <attribute name='multiplicity'>
                    <doc>This should be a positive integer.</doc>
                  </attribute>
                </element>
              </zeroOrMore>
              <zeroOrMore>
                <element name='tagged-product'>
                  <doc>Here, a reaction product is given with its non-negative integer multiplicity.</doc>
                  <attribute name='tag'>
                    <doc>This is the hex address of the species as it appeared in the Moleculizer simulation.</doc>
                  </attribute>
                  <attribute name='multiplicity'>
                    <doc>This should be a non-negative integer.</doc>
                  </attribute>
                </element>
              </zeroOrMore>
              <element name='rate'>
                <doc>Though Moleculizer works with populations of species of molecules, rather than molar concentrations, reactions are specified in terms of molar reaction rates to make it easy to incorporate published rates. The units of reaction rate depends on the total multiplicity of the substrates: unary reaction rates are in (Hz), binary reaction rates in (Hz)(l)/(mol).</doc>
                <attribute name='value'>
                  <doc user-variable='yes'>This should be a non-negative floating-point number, like 34.5, or 9.1e20, or 0.0.</doc>
                </attribute>
                <optional>
                  <element name='sci-note'>
                    <attribute name='fraction'/>
                    <attribute name='exponent'/>
                  </element>
                </optional>
              </element>
            </element>
          </zeroOrMore>
        </element>
        <element name='volume'>
          <doc>This is the reaction volume at the time that Moleculizer state was dumped.</doc>
          <attribute name='liters'>
            <doc user-variable='yes'>This should be a positive floating-point number, like 34.5 or 9.1e20.</doc>
          </attribute>
          <optional>
            <element name='sci-note'>
              <attribute name='fraction'/>
              <attribute name='exponent'/>
            </element>
          </optional>
        </element>
        <element name='time'>
          <doc>This element reports the simulation time at which state was dumped from Moleculizer.</doc>
          <attribute name='seconds'>
            <doc>This should be a non-negative floating point number.</doc>
          </attribute>
        </element>
      </element>
      <element name='streams'>
        <doc>This section is here so that aggregate dumps of many species can be transferred to the target simulator.  Streams of internal Moleculizer statistic, such as the number of reaction events, are not dumped.</doc>
        <element name='tagged-species-streams'>
          <doc>A species stream is a collection of species whose populations are summed for dumping to output.  In a state dump, the species that were being dumped to to the species stream are simply listed by tag.</doc>
          <zeroOrMore>
            <element name='tagged-species-stream'>
              <doc>This element emits the species whose populations are contributing to named species-stream at the time that Moleculizer's state was dumped.  Since species streams may be specified by, say, complex structure, new species may be added to the species stream's summation as the simulation proceeds.  This is why tags must appear here instead of species names: many species that may end up in a species stream (column of dumped populations or trace in a plot) may be automatically-generated complexes that appeared in the course of simulation and therefore do not even have names.</doc>
              <attribute name='name'>
                <doc>This is the name of the species stream as given in the original moleculizer-input.</doc>
              </attribute>
              <zeroOrMore>
                <element name='tagged-species-ref'>
                  <doc>This is a specification of a particular species by its tag, which is basically the hex address of the species's data structure.  The reason for tags is that every species has a tag, while only the few species ('explicit-species') have user-supplied names.</doc>
                  <attribute name='tag'>
                    <doc>This is essentially the hex address of a species's data structure in one particular Moleculizer run, so that it is useful only for internal references in a moleculizer-state file.  (But multiple state files dumped from the same simulation do have tags that are consistent from file to file.)</doc>
                  </attribute>
                </element>
              </zeroOrMore>
            </element>
          </zeroOrMore>
        </element>
        <element name='tagged-dump-streams'>
          <doc>Each dump-stream specifies the contents of a dump file, which is also usually what ends up in a single plot.  Any dumpable item can be dumped in any number of dump files.</doc>
          <zeroOrMore>
            <element name='tagged-dump-stream'>
              <doc>A dump-stream specifies what gets dumped into a particular output file.  Each item (explicit-species, species-stream, or simulator statistic) you specify for dumping becomes a column of figures in the dump file. My usual practice is to plot everything in a dump file on a single plot, and the Gnuplot script "plt" that comes with Moleculizer is designed to do this.</doc>
              <attribute name='file-name'>
                <doc>Simulations to be run by the server should only generate files in their working directory, so that "fritz.dmp" or "my-output_3.dmp" would be okay, you shouldn't dump to "output/proteins/fus3.dmp" or "/home/joe/joe's_sims/saturday.dmp" would be bad and would probably cause your simulation to fail.  Dumping to remote files is okay for simulations you run from the command line, though.</doc>
              </attribute>
              <attribute name='dump-period'>
                <doc user-variable='yes'>The interval in (simulated) seconds between dumps.  This should be a positive, floating-point number, like 52.0 or 0.05.  Typically, all the dump-streams you specify will have the same dump-period, but it is not required that they do.  You could dump statistics more slowly, for example.</doc>
              </attribute>
              <zeroOrMore>
                <choice>
                  <element name='tagged-species-stream-ref'>
                    <doc>Here the columns that appear in the output file are given by name.  This is the same as their configuration in the input file. This redundant info is dumped in the state file in the hope that the state file can, by itself, sometimes be translated into simulation input for another simulator.</doc>
                    <attribute name='name'>
                      <doc>The name of a species-stream.</doc>
                    </attribute>
                  </element>
                </choice>
              </zeroOrMore>
            </element>
          </zeroOrMore>
        </element>
      </element>
    </element>
  </start>
</grammar-doc>
