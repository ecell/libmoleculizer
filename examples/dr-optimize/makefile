###############################################################################
# Moleculizer - a stochastic simulator for cellular chemistry.
# Copyright (C) 2001  Walter Lawrence (Larry) Lok.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#    
# Contact information:
#   Larry Lok, Research Fellow          Voice: 510-981-8740
#   The Molecular Sciences Institute      Fax: 510-647-0699
#   2168 Shattuck Ave.                  Email: lok@molsci.org
#   Berkeley, CA 94704
###############################################################################

include build/navigation.mk

target : 

$(OUTPUT_DIR) :
	mkdir $@

# This is how to make makefiles from parameter file, responses file, etc.
include build/build.mk

# This is just cleaning and preening.
include build/script.mk

TEMPLATE_INPUT := moleculizer-in.xml

# Headers to associate values generated by the "optimizer" process
# with substitutions to be made in the template input.
SUBSTITUTION_HEADERS := substitution-headers

# Values generated by the "optimizer" process.  For now, I'm only trying to
# get to optimization of rates, and it seems to work well for the
# optimizer to work with the logarithms of the rates.
SUBSTITUTION_VALUES := substitution-values

# Combining the above.  This script just exponentiates the logarithms of rates
# that the optimizer works with and combines them with the headers to get
# the usual kind of substitution file that the rest of the scripts work with.
SUBSTITUTIONS := substitutions
$(SUBSTITUTIONS) : $(SUBSTITUTION_HEADERS) $(SUBSTITUTION_VALUES)
	$(SCRIPT)/exp-substitute.pl $^ > $@

# This rule subsitutes the rates coming from the optimizer into the
# template moleculizer input file.
$(OUTPUT_DIR)/$(TEMPLATE_INPUT) : $(TEMPLATE_INPUT) $(SUBSTITUTIONS) | $(OUTPUT_DIR)
	$(SCRIPT)/simple-substitution.pl $^ $@

# This rule sets up the headers in the 'moleculizer-variations' file that will
# be genereated by an optimization run.  It records the 'best' parameters
# at each stage of the optimization for later resimulation.
VARIATIONS := moleculizer-variations
$(VARIATIONS) : $(SUBSTITUTION_HEADERS)
	echo -n 'DIR	' > $@
	cat $< >> $@

# This version of dose-response.mk customized to be, in effect, the top-level
# makefile.
include build/opt-dose-response.mk

# Note that clean does not remove substitution-values, as this is the file
# that is used for communication between the optimizer and the simulator.
clean : SUBS := $(SUBSTITUTIONS)
clean :
	rm -rf $(OUTPUT_DIR)
	rm -rf $(SUBS)

# Preen restores substitution-values to its original form, for starting a new
# run from the original point.
preen : clean
	rm -f *~
	rm -f *.bak
	rm -f optimization-journal
	rm -f moleculizer-variations
	rm -rf *.out
	cp substitution-values.orig substitution-values
