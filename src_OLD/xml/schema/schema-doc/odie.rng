<?xml version="1.0" encoding="UTF-8"?>
<grammar-doc xmlns="http://relaxng.org/ns/structure/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0"><start><element name="odie"><doc>Odie is a reaction-based interface to solvers for ordinary differential equations from the Gnu Scientific Library.  It allows you to set up an ODE simulation of a reaction network without ever actually touching differential equations.  Reactions are entered in stoichiometric form.  Provisions for dumping simulation output are similar to Moleculizer.  If a moleculizer-state state dump file is translated into an odie simulation, then summary output of species is arranged as it was in moleculizer. </doc><element name="species"><doc>Species in odie must all be defined before starting the simulation, unlike Moleculizer.</doc><zeroOrMore><element name="species-entry"><doc>A species-entry element is for defining a single species.</doc><attribute name="name"><doc>Each species must have a different name.</doc></attribute><attribute name="conc"><doc>Concentrations should be given in (mol)/(liter).</doc></attribute></element></zeroOrMore></element><element name="reactions"><doc>Reactions must all be defined at the start of the simulation in ode, unlike Moleculizer.</doc><zeroOrMore><element name="reaction"><doc>A single reaction is defined in a reaction element.   A reaction definition gives the stoichiometry of the reaction, along with its reaction rate.</doc><zeroOrMore><element name="reaction-substrate"><doc>'Reaction-substrate' was an unfortunate choice of name and may change in the next version of the schema, perhaps to just 'reactant.'  </doc><attribute name="name"><doc>This must be the name of a species.</doc></attribute><attribute name="multiplicity"><doc>This should be a non-negative integer, like 1 or 3.  Physically, multiplicities greater than 2 are in a sense fictional; reactions that are not unary or binary are really summaries of collections of unary and/or binary reactions.</doc></attribute></element></zeroOrMore><zeroOrMore><element name="reaction-product"><doc>Reaction products can be any species.</doc><attribute name="name"><doc>This must be the name of a species.</doc></attribute><attribute name="multiplicity"><doc>The multiplicity of a reaction product must be a non-negative integer, like 1 or 3.  </doc></attribute></element></zeroOrMore><element name="rate"><doc>Reaction rate constants are in units that depend on the "arity" of the reaction; i.e. the number of reactants that participate in the reaction.  The rate constant of a unary (decay) reaction is in Hz and amounts to the reciprocal of the mean lifetime of a reactant molecule.  The rate constant of a binary reaction is in (Hz)(l)/(mol).</doc><attribute name="value"><doc>This should be a non-negative floating point number, like 4.05, 6.7e22, 0.0, or 3.5e-42.</doc></attribute></element></element></zeroOrMore></element><element name="dumpables"><doc>In the dumpables section, you give names to the traces on your output plots (or equivalently, the names of columns in your .dmp files.)</doc><zeroOrMore><element name="dumpable"><doc>A dumpable may be thought of as a trace on an output plot or a column of figures in a dump file.  Many species may be summed to produce a trace, as happens in Moleculizer, and this syntax is designed to accommodate translation of Moleculizer-generated reaction networks into odie simulations using ODE's.  </doc><attribute name="name"><doc>This is the name that will appear at the head of the column in the .dmp file, or equivalently, the name of a trace in a plot made from the .dmp file.</doc></attribute><oneOrMore><element name="species-ref"><doc>Here, you point out a species in order to have its concentration summed into the dumpable's trace (or output column.)</doc><attribute name="name"><doc>This must be the name of a species.</doc></attribute></element></oneOrMore></element></zeroOrMore></element><element name="dump-streams"><doc>In the dump-streams section, you parcel out dumpables to different output (.dmp) files.  Using the standard plotting tool plt, all the dumpables in a given .dmp file end up on a single plot.</doc><zeroOrMore><element name="dump-stream"><doc>A dump stream element describes the contents of a single output (.dmp) file.  Using the provided plotting tool plt, all the columns in the .dmp file become traces in a single plot.</doc><attribute name="name"><doc>The name of the output file.  In server-based simulation, output files should be in the working directory, so that your file name should be something like
foo.dmp or my_output.dmp, but nothing like ../bar/fiz.dmp or /foo.dmp.</doc></attribute><zeroOrMore><element name="dumpable-ref"><doc>Here you select a dumpable (a columns for the output file) by giving its name.  The columns appear in the output file in the same order as you use here, as well as the traces on the plot (made with plt).</doc><attribute name="name"><doc>This must be the name of a dumpable.</doc></attribute></element></zeroOrMore></element></zeroOrMore></element><element name="stop-time"><doc>Here you tell how long the simulation should go on, in simulated seconds.</doc><attribute name="seconds"><doc>This should be a non-negative, floating point number, like 3.4, 2.1e3, or 8.9e-4.</doc></attribute></element><optional><element name="dump-interval"><doc>With this OPTIONAL element, you can arrange to have output dumped at regular intervals, rather than when the ODE solver decides to take a timeout.</doc><attribute name="seconds"><doc>This should be a positive, floating point number, like 0.01 or 1.0e-2.</doc></attribute></element></optional><element name="epsilon-abs"><doc>This element allows control of the most straightforward kind of error in the simulation: how far the approximate solution differs from the real solution.  But note that setting this number to, say, 1.0e-10 does not guarantee that your simulation results will be correct to 10 figures.  The smaller that this number is, the harder the simulation will try to stay close to the actual solution in an absolute sense.  On the other hand, when the values of a solution become very small, you use the "epsilon-rel" element to control how small the error is as a fraction of the solution; you control the relative error.</doc><attribute name="value"><doc>This should be a positive floating-point number, such as 3.4 or 1.0e-22.</doc></attribute></element><element name="epsilon-rel"><doc>This element allows control of relative error in the simulation; i.e. the size of the error in each species's concentration as a fraction of the species's concentration.  This is most important for species with very small concentration.</doc><attribute name="value"><doc>This should be a positive floating-point number, such as 3.4 or 1.0e-22.</doc></attribute></element><element name="state-scalar"><doc>Odie estimates the error in both the solution and in its derivative and attempts to control both of them.  This scalar controls how significant errors in the concentrations are, as opposed to errors in their derivatives.  I have found 1.0 to be a useful value here.</doc><attribute name="value"><doc>This should be a positive floating point number, such as 1.0 or 4.5e-1.</doc></attribute></element><element name="deriv-scalar"><doc>Odie estimates the error in both the solution and in its derivative and attempts to control both of them.  This scalar controls how significant errors in the derivatives of the concentrations are, as opposed to errors in the concentrations themselves.  I have found 1.0 to be a useful value here.</doc><attribute name="value"><doc>This should be a positive floating point number, such as 1.0 or 4.5e-1.</doc></attribute></element></element></start></grammar-doc>