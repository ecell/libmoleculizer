<?xml version='1.0' encoding='UTF-8'?>
<grammar-doc xmlns='http://relaxng.org/ns/structure/1.0' xmlns:rng='http://relaxng.org/ns/structure/1.0'>
  <include href='mol.rng'/>
  <include href='plex.rng'/>
  <include href='dimer.rng'/>
  <include href='stoch.rng'/>
  <!--Here were included gpa.rng, nucEx.rng, modKinase.rng, scaffold.rng, and bndKinase.rng.-->
  <!--These were specialized constructs that are now all supposed -->
  <!--to be supplanted by the flexible omni-gen and -->
  <!--uni-mol-gen reaction generators specified in ftr.rng.-->
  <include href='ftr.rng'/>
  <define name='unit-model-content'>
    <ref name='mol-model-content'/>
    <ref name='plex-model-content'/>
  </define>
  <define name='optional-user-doc'>
    <optional>
      <element name='user-doc'>
        <doc>Use this optional element to add documentation intended to appear in the html translation of the model.  The text of this element will simply appear as a paragraph in the html translation of the model.  Optionally, a link to external documentation can also appear in the html translation of the model.</doc>
        <optional>
          <attribute name='anchor-name'>
            <doc>Use this attribute to specify an anchor name that can be used to target a particular reaction, species, etc. in the html translation of the model.</doc>
          </attribute>
        </optional>
        <optional>
          <attribute name='anchor-href'>
            <doc>Use this attribute to specify a URL for external documentation (e.g. to the wiki).  This URL will be used as the target of link in html documentation generated from this model by XSLT transformation.</doc>
          </attribute>
        </optional>
        <text/>
      </element>
    </optional>
  </define>
  <start>
    <element name='moleculizer-input'>
      <doc more-doc-href='moleculizer-input.html'>This is the top-level node in documentation of Moleculizer's input file format.  You can see that a moleculizer-input document consists of three main sections, corresponding to the three child elements of the top-level moleculizer-input element.  Follow the child links below to begin exploring the hierarchical structure of a moleculizer-input file.</doc>
      <element name='model'>
        <doc>The model section is where almost all the biology goes, including all species and reactions that you define.  But rather than species or reactions, most of what actually goes here is really reaction generators and building-blocks for species.  For example, the typical way you enter information about a monomeric protein is as a building block for protein complexes.  Similarly, the typical way you enter a binding rate between two proteins is in a generator for dimerization and decomposition reactions between complexes that contain the two proteins.</doc>
        <ref name='optional-user-doc'/>
        <ref name='unit-model-content'/>
        <element name='reaction-gens'>
          <doc>Reaction generators are defined in this section.  A reaction generator "listens" for the creation of new species that have features that the reaction generator is interested in; that is, features that make the new species a possible substrate for a reaction that the generator might make.  For example, a decomposition generator "listens" for new species containing a specific binding.  The decomposition generator knows about the rate of decomposition of this binding, which it usually assumes to be independent of the rest of the complex.  When it hears of such a new species, it creates a new decomposition reaction that breaks down the binding, potentially producing one or two new species. If a product species is new, then this whole "listening" thing happens when the reaction happens for the first time.</doc>
          <zeroOrMore>
            <ref name='reaction-gens-content'/>
          </zeroOrMore>
        </element>
        <element name='explicit-species'>
          <doc>Here you describe species explicitly because you want to create molecules of the species at some point during the simulation, because you want to track the population of the species through the simulation, or because you want to define explict reactions involving the species.  Some things that you might think would be explicit species, such as a monomeric protein, may not be; rather, they are constituents of species of complexes.  (The monomeric protein is a "mol" but you can define an explicit plex-species that contains just the one mol.)</doc>
          <zeroOrMore>
            <ref name='explicit-species-content'/>
          </zeroOrMore>
        </element>
        <element name='explicit-reactions'>
          <doc>Most of the reactions that Moleculizer works with are generated automatically by reaction generators, but you can enter reactions one-at-a-time, too.  The participants in an explicit reaction have to be explicit species, so that they have names and you therefore have a way to refer to them in the explicit reaction's definition.</doc>
          <zeroOrMore>
            <element name='reaction'>
              <doc>This is for defining an explicit reaction in stoichiometric, or "high-school-chemistry" format, by giving the names of (explicit) substrate species, along with their multiplicities, and similarly giving the names of (explicit) product species, along with their multiplicities.  Finally, you give the reaction rate.  Note that there is no enforcement of conservation of mass or any other such sanity checks.  Every reaction should have at least one substrate</doc>
              <ref name='optional-user-doc'/>
              <zeroOrMore>
                <element name='substrate-species-ref'>
                  <doc>Here, you give specify an (explicit) susbstrate species for the reaction.  If a substrate is mentioned more than once, the multiplicities are added.</doc>
                  <attribute name='name'>
                    <doc>This should be the name of an explicit species.</doc>
                  </attribute>
                  <attribute name='multiplicity'>
                    <doc>This should be a positive integer.</doc>
                  </attribute>
                </element>
              </zeroOrMore>
              <zeroOrMore>
                <element name='product-species-ref'>
                  <doc>Here, you give specify an (explicit) product species for the reaction.  If a product is mentioned more than once, the multiplicities are added.</doc>
                  <attribute name='name'>
                    <doc>This should be the name of an explicit species.</doc>
                  </attribute>
                  <attribute name='multiplicity'>
                    <doc>This should be a positive integer.</doc>
                  </attribute>
                </element>
              </zeroOrMore>
              <element name='rate'>
                <doc>Though Moleculizer works with populations of species of molecules, rather than molar concentrations, reactions are specified in terms of molar reaction rates to make it easy to incorporate published rates. The units of reaction rate depends on the total multiplicity of the substrates: unary reaction rates are in (Hz), binary reaction rates in (Hz)(l)/(mol).</doc>
                <attribute name='value'>
                  <doc user-variable='yes'>This should be a non-negative floating-point number, like 34.5, or 9.1e20, or 0.0.</doc>
                </attribute>
              </element>
            </element>
          </zeroOrMore>
        </element>
        <element name='volume'>
          <doc>Give the reaction volume in liters; typically the volume of the cell.  Note that by using "grow" events, the volume of the cell can be increased or decreased during the course of the simulation.</doc>
          <ref name='optional-user-doc'/>
          <attribute name='liters'>
            <doc user-variable='yes'>This should be a positive floating-point number, like 34.5 or 9.1e20.</doc>
          </attribute>
        </element>
      </element>
      <element name='streams'>
        <doc>The streams section of moleculizer-input is where you control simulation output.</doc>
        <element name='species-streams'>
          <doc>A species stream is a collection of species whose populations are summed for dumping to output.  This is a surprisingly common need; for example, to get the total amount of Ste4 that is bound to Ste5, one has to specify all the species that contain the Ste4-Ste5 subcomplex.  This can be done with an omni-species-stream.</doc>
          <zeroOrMore>
            <ref name='species-streams-content'/>
          </zeroOrMore>
        </element>
        <element name='dump-streams'>
          <doc>Each dump-stream specifies the contents of a dump file, which is also usually what ends up in a single plot.  Any dumpable item can be dumped in any number of dump files.</doc>
          <zeroOrMore>
            <element name='dump-stream'>
              <doc>A dump-stream specifies what gets dumped into a particular output file.  Each item (explicit-species, species-stream, or simulator statistic) you specify for dumping becomes a column of figures in the dump file. My usual practice is to plot everything in a dump file on a single plot, and the Gnuplot script "plt" that comes with Moleculizer is designed to do this.</doc>
              <attribute name='dump-period'>
                <doc user-variable='yes'>The interval in (simulated) seconds between dumps.  This should be a positive, floating-point number, like 52.0 or 0.05.  Typically, all the dump-streams you specify will have the same dump-period, but it is not required that they do.  You could dump statistics more slowly, for example.</doc>
              </attribute>
              <ref name='optional-user-doc'/>
              <choice>
                <element name='target-file'>
                  <doc>The name of the dump file.  It is also displayed automatically as the title on a plot produced with "plt" if no other title is demanded.</doc>
                  <attribute name='file-name'>
                    <doc>Usually, you want dump files to end up in the same directory where the simulation is running, so you just give a simple file name, like "kinase-species".  But you can also use a relative or absolute path, like
"simulation-output/kinase-species" or "/home/jerry/sims/output/saturday/kinase-species".</doc>
                  </attribute>
                </element>
                <element name='target-output-stream'>
                  <doc>Use this, instead of a target-file, to dump output to standard output or standard error.  This is not recommended for server-based simulation.</doc>
                  <attribute name='name'>
                    <doc>There are two possible values: standard-output and standard-error.</doc>
                    <choice>
                      <value>standard-output</value>
                      <value>standard-error</value>
                    </choice>
                  </attribute>
                </element>
              </choice>
              <oneOrMore>
                <choice>
                  <element name='species-stream-ref'>
                    <doc>Here, you point to something defined in the species-streams section to dump as a column of figures (or trace on a plot).</doc>
                    <attribute name='name'>
                      <doc>The name of a species-stream.</doc>
                    </attribute>
                  </element>
                  <element name='species-ref'>
                    <doc>Here, you point to an explicit-species whose population to dump as a column of figures (or trace on a plot).</doc>
                    <attribute name='name'>
                      <doc>The name of an explicit-species.</doc>
                    </attribute>
                  </element>
                  <element name='stat-stream-ref'>
                    <doc>This is how to dump simulator statistics as columns in a dump file.  Look at the documentation for the name attribute to see a list of the available statistics.</doc>
                    <attribute name='name'>
                      <doc more-doc-href='stat-stream-ref.html'>Please follow the link to More.</doc>
                      <choice>
                        <value>sim-time</value>
                        <value>clock-time</value>
                        <value>species-count</value>
                        <value>reaction-count</value>
                        <value>reaction-event-count</value>
                        <value>volume</value>
                      </choice>
                    </attribute>
                  </element>
                </choice>
              </oneOrMore>
            </element>
          </zeroOrMore>
        </element>
      </element>
      <element name='events'>
        <doc>Moleculizer can be programmed to do specific deeds at specific times, including creating molecules, dumping the state of the simulation, and stopping the simulation.</doc>
        <zeroOrMore>
          <choice>
            <element name='create-event'>
              <doc>Use a create-event to create new molecules during the simulation.  You have to specify a particular species, which must therefore be an explicit-species.  When you define an explicit species, you have an opportunity to say what its initial population is in the definition of the species, so that it is not necessary to create the initial population with a create-event (although you can do so if you wish.)</doc>
              <attribute name='time'>
                <doc user-variable='yes'>This should be a non-negative, floating point number of (simulated) seconds,
like 0.0, or 1.0e3.</doc>
              </attribute>
              <ref name='optional-user-doc'/>
              <element name='species-ref'>
                <doc>Here, you give the name of the species of the molecules you wish to create.</doc>
                <attribute name='name'>
                  <doc>This must be the name of an explicit-species.</doc>
                </attribute>
              </element>
              <element name='population'>
                <doc>Here you give the number of molecules you wish to create.</doc>
                <attribute name='count'>
                  <doc user-variable='yes'>This should be a non-negative integer.</doc>
                </attribute>
              </element>
            </element>
            <element name='dump-state-event'>
              <doc>Use a dump-state-event to cause Moleculizer's state to be dumped at a chosen point during a simulation.   The state dump contains all the species and reactions that exist at the time of the dump, along with other data needed to reconstruct the simulation.  You can continue the simulation from the point where state is dumped using the version of Moleculizer called "continuator," and you can consistently revise the reaction parameters in a state dump using the version of Moleculizer called "parametrizer."  Translation tools convert the state dump into input for other programs (e.g. the simple ODE simulator "odie") or into SBML.</doc>
              <attribute name='time'>
                <doc user-variable='yes'>This should be a non-negative, floating point number of (simulated) seconds,
like 0.0, or 1.0e3.</doc>
              </attribute>
              <ref name='optional-user-doc'/>
              <element name='target-file'>
                <doc>Give the name to the state dump file you wish to create at this time during the simulation.</doc>
                <attribute name='file-name'>
                  <doc>This may be an absolute or relative file name, but should be a local file (a file in the working directory) in simulations submitted to the simulation server.</doc>
                </attribute>
              </element>
            </element>
            <element name='stop-event'>
              <doc>A stop-event stops the simulation, so every simulation should probably have one, and only one, of them.</doc>
              <attribute name='time'>
                <doc user-variable='yes'>This should be a non-negative, floating point number of (simulated) seconds,
like 0.0, or 1.0e3.</doc>
              </attribute>
              <ref name='optional-user-doc'/>
            </element>
          </choice>
        </zeroOrMore>
      </element>
    </element>
  </start>
</grammar-doc>
